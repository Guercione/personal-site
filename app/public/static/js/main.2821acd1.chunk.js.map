{"version":3,"sources":["redux/types/notificationType.js","redux/reducers/notificationReducer.js","redux/reducers/index.js","redux/saga.js","redux/store.js","components/SnackBar/index.js","redux/actions/notificationAction.js","containers/Routes/index.js","containers/index.js","index.js","constants/palette.js","components/Loading/index.js"],"names":["NOTIFICATION_SET_MESSAGE","NOTIFICATION_CLEAR_MESSAGE","NOTIFICATION_REQUEST_ERROR","initialState","type","undefined","active","message","notification","state","action","Type","notificationType","NOTIFICATION_REQUEST_SUCCESS","rootSaga","all","sagaMiddleware","createSagaMiddleware","Store","createStore","combineReducers","Reducers","applyMiddleware","run","saga","types","success","warning","error","SnackBar","notificationClearMessage","handleClose","event","reason","Snackbar","data-testid","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","SnackbarContent","style","backgroundColor","palette","toLowerCase","Button","onClick","color","defaultProps","connect","store","ComponentLoading","Grid","container","direction","justify","alignItems","Loading","full","colored","height","width","Home","React","lazy","Error404","Routes","Suspense","fallback","exact","path","component","theme","createMuiTheme","primary","main","contrastText","secondary","info","typography","fontFamily","useNextVariants","h1","fontSize","subtitle1","body1","styles","makeStyles","bg","App","className","ReactDOM","render","document","getElementById","background","highlight","grey","greyLight","greyDark","alignContent","svg","xmlns","link","version","viewBox","pace","d","fill","fillOpacity","attributeName","from","to","dur","repeatCount"],"mappings":"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","file":"static/js/main.2821acd1.chunk.js","sourcesContent":["export default {\n  NOTIFICATION_SET_MESSAGE: \"NOTIFICATION_SET_MESSAGE\",\n  NOTIFICATION_CLEAR_MESSAGE: \"NOTIFICATION_CLEAR_MESSAGE\",\n  NOTIFICATION_REQUEST_ERROR: \"NOTIFICATION_REQUEST_ERROR\",\n};\n","import Type from \"redux/types/notificationType\";\n\nexport const initialState = {\n  type: undefined,\n  active: false,\n  message: undefined,\n};\n\nexport const notification = (state = initialState, action) => {\n  switch (action.type) {\n    case Type.NOTIFICATION_SET_MESSAGE:\n      return {\n        ...state,\n        type: action.notificationType,\n        active: true,\n        message: action.message,\n      };\n\n    case Type.NOTIFICATION_REQUEST_ERROR:\n      return {\n        ...state,\n        type: \"error\",\n        active: true,\n        message: action.message,\n      };\n\n    case Type.NOTIFICATION_REQUEST_SUCCESS:\n      return {\n        ...state,\n        type: \"success\",\n        active: true,\n        message: action.message,\n      };\n\n    case Type.NOTIFICATION_CLEAR_MESSAGE:\n      return {\n        ...state,\n        active: false,\n      };\n\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n\nexport default notification;\n","import notification from \"./notificationReducer\";\n\nexport default {\n  notification,\n};\n","// import { takeLatest, all } from \"redux-saga/effects\";\nimport { all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n  yield all([\n    // takeLatest(\"TYPE\", functionName)\n  ]);\n}\n","import logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport Reducers from \"./reducers\";\nimport saga from \"./saga\";\n\nconst sagaMiddleware = new createSagaMiddleware();\n\nconst Store = createStore(\n  combineReducers(Reducers),\n  process.env.NODE_ENV === \"development\"\n    ? applyMiddleware(sagaMiddleware, logger)\n    : applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(saga);\n\nexport default Store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport palette from \"constants/palette\";\n\nimport { connect } from \"react-redux\";\nimport { notificationClearMessage } from \"redux/actions/notificationAction\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nconst types = { success: \"success\", warning: \"warning\", error: \"error\" };\n\nconst SnackBar = ({ active, type, message, notificationClearMessage }) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    return notificationClearMessage();\n  };\n\n  return (\n    <Snackbar\n      data-testid=\"snackbar\"\n      open={active}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n    >\n      <SnackbarContent\n        style={{\n          backgroundColor: palette[types[type.toLowerCase()]],\n        }}\n        message={<span>{message}</span>}\n        action={\n          <Button onClick={handleClose} style={{ color: \"white\" }}>\n            Fechar\n          </Button>\n        }\n      />\n    </Snackbar>\n  );\n};\n\nSnackBar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  type: PropTypes.string,\n  message: PropTypes.string,\n  notificationClearMessage: PropTypes.func.isRequired,\n};\n\nSnackBar.defaultProps = {\n  type: \"success\",\n  message: \"No message defined\",\n};\n\nconst mapSateToProps = (store) => {\n  const { type, active, message } = store?.notification;\n  return { type, active, message };\n};\n\nexport default connect(mapSateToProps, {\n  notificationClearMessage,\n})(SnackBar);\n","import Type from \"redux/types/notificationType\";\n\nexport const notificationSetMessage = (message, notificationType) => ({\n  type: Type.NOTIFICATION_SET_MESSAGE,\n  message,\n  notificationType,\n});\n\nexport const notificationClearMessage = () => ({\n  type: Type.NOTIFICATION_CLEAR_MESSAGE,\n});\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Loading from \"components/Loading\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SnackBar from \"components/SnackBar\";\n\nconst ComponentLoading = () => (\n  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n    <Loading full colored height=\"80px\" width=\"80px\" />\n  </Grid>\n);\n\nconst Home = React.lazy(() => import(\"containers/Home\"));\nconst Error404 = React.lazy(() => import(\"containers/Errors/error404\"));\n\nconst Routes = () => (\n  <React.Suspense fallback={<ComponentLoading />}>\n    <Router>\n      <SnackBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/404\" component={Error404} />\n        <Route component={Error404} />\n      </Switch>\n    </Router>\n  </React.Suspense>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Store from \"redux/store\";\n\nimport palette from \"constants/palette\";\n\nimport Routes from \"./Routes\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: palette[\"primary\"],\n      contrastText: palette[\"secondary\"],\n    },\n    secondary: {\n      main: palette[\"secondary\"],\n      contrastText: palette[\"primary\"],\n    },\n    success: {\n      main: palette[\"success\"],\n    },\n    warning: {\n      main: palette[\"warning\"],\n    },\n    error: {\n      main: palette[\"error\"],\n    },\n    info: {\n      main: palette[\"grey\"],\n    },\n  },\n  typography: {\n    fontFamily: \"Texta\",\n    useNextVariants: true,\n    h1: {\n      fontSize: 28,\n    },\n    subtitle1: {\n      fontSize: 18,\n    },\n    body1: {\n      fontSize: 16,\n      color: palette[\"grey\"],\n    },\n  },\n});\n\nconst styles = makeStyles({\n  bg: { backgroundColor: palette[\"background\"] },\n});\n\nconst App = () => (\n  <Provider store={Store}>\n    <div className={styles().bg}>\n      <MuiThemeProvider theme={theme}>\n        <Routes />\n      </MuiThemeProvider>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","export default {\n  background: \"#110e17\",\n\n  primary: \"#ffffff\",\n  secondary: \"#1e1e25\",\n  highlight: \"#0fbba0\",\n\n  grey: \"#797979\",\n  greyLight: \"#dbdbdb\",\n  greyDark: \"#353535\",\n\n  error: \"#f76262\",\n  warning: \"#f0a902\",\n  success: \"#1fab89\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport palette from \"constants/palette\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Loading = ({ color, width, height }) => (\n  <Grid container justify=\"center\" alignItems=\"center\" alignContent=\"center\">\n    <svg\n      svg=\"http://www.w3.org/2000/svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      link=\"http://www.w3.org/1999/xlink\"\n      version=\"1.0\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 128 128\"\n      pace=\"preserve\"\n    >\n      <g>\n        <path\n          d=\"M75.4 126.63a11.43 11.43 0 0 1-2.1-22.65 40.9 40.9 0 0 0 30.5-30.6 11.4 11.4 0 1 1 22.27 4.87h.02a63.77 63.77 0 0 1-47.8 48.05v-.02a11.38 11.38 0 0 1-2.93.37z\"\n          fill={palette[color] || palette[\"highlight\"]}\n          fillOpacity=\"1\"\n        />\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 64 64\"\n          to=\"360 64 64\"\n          dur=\"1000ms\"\n          repeatCount=\"indefinite\"\n        ></animateTransform>\n      </g>\n    </svg>\n  </Grid>\n);\n\nLoading.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  width: \"20px\",\n  height: \"20px\",\n};\n\nexport default Loading;\n"],"sourceRoot":""}